<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="BBB 3.0">
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threads_owner" elementType="Argument">
            <stringProp name="Argument.name">threads_owner</stringProp>
            <stringProp name="Argument.value">${__P(ThreadsOwner,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threads_guest" elementType="Argument">
            <stringProp name="Argument.name">threads_guest</stringProp>
            <stringProp name="Argument.value">${__P(ThreadsGuest,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ramp_up" elementType="Argument">
            <stringProp name="Argument.name">ramp_up</stringProp>
            <stringProp name="Argument.value">${__P(RampUp,5)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ping_loop_owner" elementType="Argument">
            <stringProp name="Argument.name">ping_loop_owner</stringProp>
            <stringProp name="Argument.value">${__P(PingLoopOwner,12)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ping_loop_guest" elementType="Argument">
            <stringProp name="Argument.name">ping_loop_guest</stringProp>
            <stringProp name="Argument.value">${__P(PingLoopGuest,4)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hostname" elementType="Argument">
            <stringProp name="Argument.name">hostname</stringProp>
            <stringProp name="Argument.value">${__P(hostname,HOSTNAME_CHANGE_ME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salt" elementType="Argument">
            <stringProp name="Argument.name">salt</stringProp>
            <stringProp name="Argument.value">${__P(salt,SALT_CHANGE_ME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="allowStartStopRecording" elementType="Argument">
            <stringProp name="Argument.name">allowStartStopRecording</stringProp>
            <stringProp name="Argument.value">${__P(allowStartStopRecording,false)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="attendeePW" elementType="Argument">
            <stringProp name="Argument.name">attendeePW</stringProp>
            <stringProp name="Argument.value">${__P(attendeePW,ap)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moderatorPW" elementType="Argument">
            <stringProp name="Argument.name">moderatorPW</stringProp>
            <stringProp name="Argument.value">${__P(moderatorPW,mp)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="autoStartRecording" elementType="Argument">
            <stringProp name="Argument.name">autoStartRecording</stringProp>
            <stringProp name="Argument.value">${__P(autoStartRecording,false)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="record" elementType="Argument">
            <stringProp name="Argument.name">record</stringProp>
            <stringProp name="Argument.value">${__P(record,false)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="welcome" elementType="Argument">
            <stringProp name="Argument.name">welcome</stringProp>
            <stringProp name="Argument.value">${__P(welcome,%3Cbr%3EWelcome+to+%3Cb%3E%25%25CONFNAME%25%25%3C%2Fb%3E%21)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="redirect" elementType="Argument">
            <stringProp name="Argument.name">redirect</stringProp>
            <stringProp name="Argument.value">${__P(redirect,true)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="current_dir" elementType="Argument">
            <stringProp name="Argument.name">current_dir</stringProp>
            <stringProp name="Argument.value">${__BeanShell(org.apache.jmeter.services.FileServer.getFileServer().getBaseDir())}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <stringProp name="HTTPSampler.embedded_url_re">^((?!gravatar).)*$</stringProp>
        <intProp name="HTTPSampler.connect_timeout">60000</intProp>
        <intProp name="HTTPSampler.response_timeout">60000</intProp>
        <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Meetings" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">meetings.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.group</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">meetingName,meetingID,voiceBridge,moderatorUserName,guestUserName</stringProp>
      </CSVDataSet>
      <hashTree/>
      <eu.luminis.jmeter.wssampler.PingFrameFilter guiclass="eu.luminis.jmeter.wssampler.PingFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.PingFrameFilter" testname="WebSocket Ping/Pong Frame Filter" enabled="true">
        <boolProp name="replyToPing">true</boolProp>
        <stringProp name="filterType">FilterAll</stringProp>
      </eu.luminis.jmeter.wssampler.PingFrameFilter>
      <hashTree/>
      <eu.luminis.jmeter.wssampler.BinaryFrameFilter guiclass="eu.luminis.jmeter.wssampler.BinaryFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.BinaryFrameFilter" testname="WebSocket Binary Frame Filter" enabled="true">
        <stringProp name="comparisonType">IsPlain</stringProp>
        <stringProp name="matchPosition"></stringProp>
        <stringProp name="matchValue"></stringProp>
      </eu.luminis.jmeter.wssampler.BinaryFrameFilter>
      <hashTree/>
      <eu.luminis.jmeter.wssampler.TextFrameFilter guiclass="eu.luminis.jmeter.wssampler.TextFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.TextFrameFilter" testname="WebSocket Text Frame Filter Updated Methods" enabled="true">
        <stringProp name="comparisonType">EqualsRegex</stringProp>
        <stringProp name="matchValue">a\[&quot;\{\\&quot;msg\\&quot;:\\&quot;updated\\&quot;,\\&quot;methods\\&quot;:\[\\&quot;\d+\\&quot;\]\}&quot;\]|o</stringProp>
      </eu.luminis.jmeter.wssampler.TextFrameFilter>
      <hashTree/>
      <eu.luminis.jmeter.wssampler.TextFrameFilter guiclass="eu.luminis.jmeter.wssampler.TextFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.TextFrameFilter" testname="WebSocket Text Frame Filter Updated Methods 2" enabled="true">
        <stringProp name="comparisonType">StartsWith</stringProp>
        <stringProp name="matchValue">a[&quot;{\&quot;msg\&quot;:\&quot;updated\&quot;,\&quot;methods\&quot;:</stringProp>
      </eu.luminis.jmeter.wssampler.TextFrameFilter>
      <hashTree/>
      <eu.luminis.jmeter.wssampler.TextFrameFilter guiclass="eu.luminis.jmeter.wssampler.TextFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.TextFrameFilter" testname="WebSocket Text Frame Filter Subs Added " enabled="true">
        <stringProp name="comparisonType">Contains</stringProp>
        <stringProp name="matchValue">a[&quot;{\&quot;msg\&quot;:\&quot;added\&quot;,\&quot;collection\&quot;</stringProp>
      </eu.luminis.jmeter.wssampler.TextFrameFilter>
      <hashTree/>
      <eu.luminis.jmeter.wssampler.TextFrameFilter guiclass="eu.luminis.jmeter.wssampler.TextFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.TextFrameFilter" testname="WebSocket Text Frame Filter Subs Changed " enabled="true">
        <stringProp name="comparisonType">Contains</stringProp>
        <stringProp name="matchValue">a[&quot;{\&quot;msg\&quot;:\&quot;changed\&quot;,\&quot;collection\&quot;</stringProp>
      </eu.luminis.jmeter.wssampler.TextFrameFilter>
      <hashTree/>
      <eu.luminis.jmeter.wssampler.TextFrameFilter guiclass="eu.luminis.jmeter.wssampler.TextFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.TextFrameFilter" testname="WebSocket Text Frame Filter Subs Removed " enabled="true">
        <stringProp name="comparisonType">Contains</stringProp>
        <stringProp name="matchValue">a[&quot;{\&quot;msg\&quot;:\&quot;removed\&quot;,\&quot;collection\&quot;</stringProp>
      </eu.luminis.jmeter.wssampler.TextFrameFilter>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">./summary_log.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="false">
        <stringProp name="FileSaver.filename"></stringProp>
        <boolProp name="FileSaver.errorsonly">true</boolProp>
        <boolProp name="FileSaver.successonly">false</boolProp>
        <boolProp name="FileSaver.skipsuffix">false</boolProp>
        <boolProp name="FileSaver.skipautonumber">true</boolProp>
      </ResultSaver>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://influxdb:8086/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">Bbb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Bbb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Owner - Thread Group" enabled="true">
        <stringProp name="ThreadGroup.num_threads">${threads_owner}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ramp_up}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">owner_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.1 - Owner - Create and join Meeting" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="RandomTimer.range">10.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.1 - Owner - Create Meeting" enabled="true">
            <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.path">/bigbluebutton/api/create</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="attendeePW" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${attendeePW}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">attendeePW</stringProp>
                </elementProp>
                <elementProp name="meetingID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${meetingID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">meetingID</stringProp>
                </elementProp>
                <elementProp name="moderatorPW" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${moderatorPW}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">moderatorPW</stringProp>
                </elementProp>
                <elementProp name="name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${meetingName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">name</stringProp>
                </elementProp>
                <elementProp name="welcome" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${welcome}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">welcome</stringProp>
                </elementProp>
                <elementProp name="record" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${record}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">record</stringProp>
                </elementProp>
                <elementProp name="autoStartRecording" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${autoStartRecording}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">autoStartRecording</stringProp>
                </elementProp>
                <elementProp name="checksum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${__digest(SHA-1,createattendeePW=${attendeePW}&amp;meetingID=${meetingID}&amp;moderatorPW=${moderatorPW}&amp;name=${meetingName}&amp;welcome=${welcome}&amp;record=${record}&amp;autoStartRecording=${autoStartRecording},${salt},,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">checksum</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Successful answer" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.2 - Owner - Join" enabled="true">
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <intProp name="HTTPSampler.concurrentPool">4</intProp>
            <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.path">/bigbluebutton/api/join</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fullName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${moderatorUserName}-${owner_counter}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">fullName</stringProp>
                </elementProp>
                <elementProp name="meetingID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${meetingID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">meetingID</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${moderatorPW}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="redirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${redirect}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">redirect</stringProp>
                </elementProp>
                <elementProp name="checksum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__digest(SHA-1,joinfullName=${moderatorUserName}-${owner_counter}&amp;meetingID=${meetingID}&amp;password=${moderatorPW}&amp;redirect=${redirect},${salt},,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">checksum</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Successful answer" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Session Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">.+sessionToken=(.+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">error_on_extractor</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.2 - Owner - Enter" enabled="true">
            <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.path">/bigbluebutton/api/enter</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sessionToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${session_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionToken</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Successful answer" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract meeting_id;internal_user_id;auth_token;extern_user_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">meeting_id; internal_user_id; auth_token; extern_user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.meetingID; $.response.internalUserID; $.response.authToken; $.response.externUserID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">prev.setIgnore();
vars.remove(&quot;authenticated&quot;);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.2 - Owner - Connect websocket and subscribe" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="RandomTimer.range">10.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="1.2.1 - Owner - WebSocket Open Connection" enabled="true">
            <boolProp name="TLS">true</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">443</stringProp>
            <stringProp name="path">/v1/graphql</stringProp>
            <stringProp name="connectTimeout">30000</stringProp>
            <stringProp name="readTimeout">30000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="1.2.2 - Owner - WebSocket Write connection_init" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;type&quot;:&quot;connection_init&quot;,&quot;payload&quot;:{&quot;headers&quot;:{&quot;X-Session-Token&quot;:&quot;${session_token}&quot;}}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="1.2.3 - Owner - WebSocket Write getUserCurrent" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;id&quot;:&quot;1&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getUserCurrent&quot;,&quot;query&quot;:&quot;subscription getUserCurrent {\n  user_current {\n    userId\n    authToken\n    joinErrorCode\n    joinErrorMessage\n    joined\n    ejectReasonCode\n    loggedOut\n    meeting {\n      ended\n      endedReasonCode\n      endedByUserName\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="1.2.4 - Owner - WebSocket Write getUserInfo" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;id&quot;:&quot;2&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getUserInfo&quot;,&quot;query&quot;:&quot;query getUserInfo {\n  meeting {\n    meetingId\n    name\n    logoutUrl\n    bannerColor\n    bannerText\n    __typename\n  }\n  user_current {\n    extId\n    name\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="1.2.5 - Owner - WebSocket Write UserJoin" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;id&quot;:&quot;3&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;authToken&quot;:&quot;${auth_token}&quot;,&quot;clientType&quot;:&quot;HTML5&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UserJoin&quot;,&quot;query&quot;:&quot;mutation UserJoin($authToken: String!, $clientType: String!) {\n  userJoinMeeting(authToken: $authToken, clientType: $clientType)\n}&quot;}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__jexl3(vars.get(&quot;authenticated&quot;) == null)}</stringProp>
          </WhileController>
          <hashTree>
            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="1.2.8 - Owner - WebSocket Read getUserInfo" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="dataType">Text</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <stringProp name="readTimeout">6000</stringProp>
              <boolProp name="optional">false</boolProp>
            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${current_dir}/scripts/process_received.groovy</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.2.11 - Owner - Subs" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 4 userCurrentSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;4&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;userCurrentSubscription&quot;,&quot;query&quot;:&quot;subscription userCurrentSubscription {\n  user_current {\n    authToken\n    authed\n    avatar\n    away\n    banned\n    clientType\n    color\n    disconnected\n    echoTestRunningAt\n    ejectReason\n    ejectReasonCode\n    ejected\n    emoji\n    enforceLayout\n    expired\n    extId\n    guest\n    guestStatus\n    hasDrawPermissionOnCurrentPage\n    inactivityWarningDisplay\n    inactivityWarningTimeoutSecs\n    isDialIn\n    isModerator\n    isOnline\n    isRunningEchoTest\n    joinErrorCode\n    joinErrorMessage\n    joined\n    locked\n    loggedOut\n    mobile\n    name\n    nameSortable\n    pinned\n    presenter\n    raiseHand\n    registeredAt\n    registeredOn\n    role\n    speechLocale\n    userId\n    customParameters {\n      parameter\n      value\n      __typename\n    }\n    lastBreakoutRoom {\n      breakoutRoomId\n      currentlyInRoom\n      isDefaultName\n      sequence\n      shortName\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    userClientSettings {\n      userClientSettingsJson\n      __typename\n    }\n    voice {\n      joined\n      muted\n      spoke\n      listenOnly\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      changedModeOn\n      pageId\n      presentationId\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 5 voiceUserStream" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;5&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;voiceUserStream&quot;,&quot;query&quot;:&quot;subscription voiceUserStream {\n  user_voice_mongodb_adapter_stream(\n    cursor: {initial_value: {voiceUpdatedAt: \&quot;2020-01-01\&quot;}}\n    batch_size: 100\n  ) {\n    callerName\n    callerNum\n    callingWith\n    endTime\n    endedAt\n    floor\n    hideTalkingIndicatorAt\n    joined\n    lastFloorTime\n    lastSpeakChangedAt\n    listenOnly\n    muted\n    showTalkingIndicator\n    spoke\n    startTime\n    startedAt\n    talking\n    userId\n    voiceConf\n    voiceConfCallSession\n    voiceConfCallState\n    voiceConfClientSession\n    voiceUpdatedAt\n    voiceUserId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 6 getClientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;6&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getClientSettings&quot;,&quot;query&quot;:&quot;query getClientSettings {\n  meeting {\n    clientSettings {\n      clientSettingsJson\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 7 Patched_MeetingSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;7&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_MeetingSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_MeetingSubscription {\n  meeting {\n    createdTime\n    disabledFeatures\n    durationInSeconds\n    extId\n    endWhenNoModerator\n    endWhenNoModeratorDelayInMinutes\n    lockSettings {\n      disableCam\n      disableMic\n      disableNotes\n      disablePrivateChat\n      disablePublicChat\n      hasActiveLockSetting\n      hideUserList\n      hideViewersCursor\n      hideViewersAnnotation\n      webcamsOnlyForModerator\n      lockOnJoin\n      lockOnJoinConfigurable\n      __typename\n    }\n    metadata {\n      name\n      value\n      __typename\n    }\n    maxPinnedCameras\n    meetingCameraCap\n    meetingId\n    name\n    notifyRecordingIsOn\n    presentationUploadExternalDescription\n    presentationUploadExternalUrl\n    recordingPolicies {\n      allowStartStopRecording\n      autoStartRecording\n      record\n      keepEvents\n      __typename\n    }\n    groups {\n      groupId\n      name\n      __typename\n    }\n    learningDashboard {\n      learningDashboardAccessToken\n      __typename\n    }\n    screenshare {\n      contentType\n      hasAudio\n      screenshareConf\n      screenshareId\n      startedAt\n      stoppedAt\n      stream\n      vidHeight\n      vidWidth\n      voiceConf\n      __typename\n    }\n    usersPolicies {\n      allowModsToEjectCameras\n      allowModsToUnmuteUsers\n      authenticatedGuest\n      guestPolicy\n      maxUserConcurrentAccesses\n      maxUsers\n      meetingLayout\n      moderatorsCanMuteAudio\n      moderatorsCanUnmuteAudio\n      userCameraCap\n      webcamsOnlyForModerator\n      guestLobbyMessage\n      __typename\n    }\n    layout {\n      cameraDockAspectRatio\n      cameraDockIsResizing\n      cameraDockPlacement\n      cameraWithFocus\n      currentLayoutType\n      presentationMinimized\n      propagateLayout\n      updatedAt\n      __typename\n    }\n    isBreakout\n    breakoutPolicies {\n      breakoutRooms\n      captureNotes\n      captureNotesFilename\n      captureSlides\n      captureSlidesFilename\n      freeJoin\n      parentId\n      privateChatEnabled\n      record\n      sequence\n      __typename\n    }\n    html5InstanceId\n    voiceSettings {\n      dialNumber\n      muteOnStart\n      voiceConf\n      telVoice\n      __typename\n    }\n    externalVideo {\n      externalVideoId\n      playerCurrentTime\n      playerPlaybackRate\n      playerPlaying\n      externalVideoUrl\n      startedSharingAt\n      stoppedSharingAt\n      updatedAt\n      __typename\n    }\n    componentsFlags {\n      hasCaption\n      hasBreakoutRoom\n      hasExternalVideo\n      hasPoll\n      hasScreenshare\n      hasTimer\n      showRemainingTime\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 8 getUserInfo" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;8&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getUserInfo&quot;,&quot;query&quot;:&quot;query getUserInfo {\n  meeting {\n    meetingId\n    name\n    logoutUrl\n    bannerColor\n    bannerText\n    __typename\n  }\n  user_current {\n    extId\n    name\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 9 getCustomParameter" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;9&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getCustomParameter&quot;,&quot;query&quot;:&quot;query getCustomParameter {\n  user_customParameter {\n    parameter\n    value\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 10 getClientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;10&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getClientSettings&quot;,&quot;query&quot;:&quot;query getClientSettings {\n  meeting {\n    clientSettings {\n      clientSettingsJson\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 11 isSharedNotesPinned" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;11&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;isSharedNotesPinned&quot;,&quot;query&quot;:&quot;subscription isSharedNotesPinned {\n  sharedNotes(where: {pinned: {_eq: true}}) {\n    pinned\n    sharedNotesExtId\n    model\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 12 Patched_userCurrentSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;12&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_userCurrentSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_userCurrentSubscription {\n  user_current {\n    authToken\n    authed\n    avatar\n    away\n    banned\n    clientType\n    color\n    disconnected\n    echoTestRunningAt\n    ejectReason\n    ejectReasonCode\n    ejected\n    emoji\n    enforceLayout\n    expired\n    extId\n    guest\n    guestStatus\n    hasDrawPermissionOnCurrentPage\n    inactivityWarningDisplay\n    inactivityWarningTimeoutSecs\n    isDialIn\n    isModerator\n    isOnline\n    isRunningEchoTest\n    joinErrorCode\n    joinErrorMessage\n    joined\n    locked\n    loggedOut\n    mobile\n    name\n    nameSortable\n    pinned\n    presenter\n    raiseHand\n    registeredAt\n    registeredOn\n    role\n    speechLocale\n    userId\n    customParameters {\n      parameter\n      value\n      __typename\n    }\n    lastBreakoutRoom {\n      breakoutRoomId\n      currentlyInRoom\n      isDefaultName\n      sequence\n      shortName\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    userClientSettings {\n      userClientSettingsJson\n      __typename\n    }\n    voice {\n      joined\n      muted\n      spoke\n      listenOnly\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      changedModeOn\n      pageId\n      presentationId\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 13 isSharedNotesPinned" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;13&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;isSharedNotesPinned&quot;,&quot;query&quot;:&quot;subscription isSharedNotesPinned {\n  sharedNotes(where: {pinned: {_eq: true}}) {\n    pinned\n    sharedNotesExtId\n    model\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 14 subscription chat" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;14&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;query&quot;:&quot;subscription {\n  chat(where: {totalUnread: {_gt: 0}, visible: {_eq: true}}) {\n    chatId\n    totalUnread\n    participant {\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 15 GetPadLastRev" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;15&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;externalId&quot;:&quot;notes&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;GetPadLastRev&quot;,&quot;query&quot;:&quot;subscription GetPadLastRev($externalId: String!) {\n  sharedNotes(where: {sharedNotesExtId: {_eq: $externalId}}) {\n    lastRev\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 16 UsersCount" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;16&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UsersCount&quot;,&quot;query&quot;:&quot;subscription UsersCount {\n  user_aggregate {\n    aggregate {\n      count\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 17 MeetingPermissions" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;17&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;MeetingPermissions&quot;,&quot;query&quot;:&quot;subscription MeetingPermissions {\n  meeting {\n    meetingId\n    isBreakout\n    lockSettings {\n      disableCam\n      disableMic\n      disableNotes\n      disablePrivateChat\n      disablePublicChat\n      hasActiveLockSetting\n      hideUserList\n      hideViewersCursor\n      webcamsOnlyForModerator\n      __typename\n    }\n    usersPolicies {\n      allowModsToEjectCameras\n      allowModsToUnmuteUsers\n      authenticatedGuest\n      guestPolicy\n      maxUserConcurrentAccesses\n      maxUsers\n      meetingLayout\n      userCameraCap\n      webcamsOnlyForModerator\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 18 CurrentPresentationPagesSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;18&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;CurrentPresentationPagesSubscription&quot;,&quot;query&quot;:&quot;subscription CurrentPresentationPagesSubscription {\n  pres_page_curr {\n    height\n    isCurrentPage\n    num\n    pageId\n    scaledHeight\n    scaledViewBoxHeight\n    scaledViewBoxWidth\n    scaledWidth\n    svgUrl: urlsJson(path: \&quot;$.svg\&quot;)\n    width\n    xOffset\n    yOffset\n    presentationId\n    content\n    downloadFileUri\n    totalPages\n    downloadable\n    presentationName\n    isDefaultPresentation\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 19 PollPublished" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;19&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PollPublished&quot;,&quot;query&quot;:&quot;subscription PollPublished {\n  poll {\n    published\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 20 CursorSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;20&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;CursorSubscription&quot;,&quot;query&quot;:&quot;subscription CursorSubscription {\n  pres_page_cursor {\n    userId\n    isCurrentPage\n    pageId\n    presentationId\n    user {\n      name\n      presenter\n      role\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 21 getCursorCoordinatesStream" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;21&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getCursorCoordinatesStream&quot;,&quot;query&quot;:&quot;subscription getCursorCoordinatesStream {\n  pres_page_cursor_stream(\n    cursor: {initial_value: {lastUpdatedAt: \&quot;2020-01-01\&quot;}}\n    batch_size: 100\n  ) {\n    xPercent\n    yPercent\n    lastUpdatedAt\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 22 annotationsStream" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;22&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;lastUpdatedAt&quot;:&quot;1970-01-01T00:00:00.000Z&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;annotationsStream&quot;,&quot;query&quot;:&quot;subscription annotationsStream($lastUpdatedAt: timestamptz) {\n  pres_annotation_curr_stream(\n    batch_size: 1000\n    cursor: {initial_value: {lastUpdatedAt: $lastUpdatedAt}}\n  ) {\n    annotationId\n    annotationInfo\n    lastUpdatedAt\n    pageId\n    presentationId\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 23 PresentationsSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;23&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationsSubscription&quot;,&quot;query&quot;:&quot;subscription PresentationsSubscription {\n  pres_presentation {\n    uploadInProgress\n    current\n    downloadFileUri\n    downloadable\n    uploadErrorDetailsJson\n    uploadErrorMsgKey\n    filenameConverted\n    isDefault\n    name\n    totalPages\n    totalPagesUploaded\n    presentationId\n    removable\n    uploadCompleted\n    exportToChatInProgress\n    exportToChatStatus\n    exportToChatCurrentPage\n    exportToChatHasError\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 24 PresentationsSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;24&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationsSubscription&quot;,&quot;query&quot;:&quot;subscription PresentationsSubscription {\n  pres_presentation {\n    uploadInProgress\n    current\n    downloadFileUri\n    downloadable\n    uploadErrorDetailsJson\n    uploadErrorMsgKey\n    filenameConverted\n    isDefault\n    name\n    totalPages\n    totalPagesUploaded\n    presentationId\n    removable\n    uploadCompleted\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 25 RaisedHandUsers" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;25&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;RaisedHandUsers&quot;,&quot;query&quot;:&quot;subscription RaisedHandUsers {\n  user(\n    where: {raiseHand: {_eq: true}}\n    order_by: [{raiseHandTime: asc_nulls_last}]\n  ) {\n    userId\n    name\n    color\n    presenter\n    isModerator\n    raiseHand\n    raiseHandTime\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 26 padSession" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;26&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;padSession&quot;,&quot;query&quot;:&quot;subscription padSession {\n  sharedNotes_session {\n    sessionId\n    sharedNotesExtId\n    padId\n    sharedNotes {\n      padId\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 27 update_user_clientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;27&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;settings&quot;:&quot;{\&quot;application\&quot;:{\&quot;animations\&quot;:true,\&quot;autoCloseReactionsBar\&quot;:true,\&quot;chatAudioAlerts\&quot;:false,\&quot;chatPushAlerts\&quot;:false,\&quot;darkTheme\&quot;:false,\&quot;directLeaveButton\&quot;:true,\&quot;fallbackLocale\&quot;:\&quot;en\&quot;,\&quot;guestWaitingAudioAlerts\&quot;:true,\&quot;guestWaitingPushAlerts\&quot;:true,\&quot;overrideLocale\&quot;:null,\&quot;paginationEnabled\&quot;:true,\&quot;raiseHandAudioAlerts\&quot;:true,\&quot;raiseHandPushAlerts\&quot;:true,\&quot;selectedLayout\&quot;:\&quot;custom\&quot;,\&quot;userJoinAudioAlerts\&quot;:false,\&quot;userJoinPushAlerts\&quot;:false,\&quot;userLeaveAudioAlerts\&quot;:false,\&quot;userLeavePushAlerts\&quot;:false,\&quot;wakeLock\&quot;:true,\&quot;webcamBorderHighlightColor\&quot;:[],\&quot;whiteboardToolbarAutoHide\&quot;:false,\&quot;locale\&quot;:\&quot;pt-BR\&quot;,\&quot;isRTL\&quot;:false},\&quot;audio\&quot;:{\&quot;inputDeviceId\&quot;:\&quot;undefined\&quot;,\&quot;outputDeviceId\&quot;:\&quot;undefined\&quot;},\&quot;dataSaving\&quot;:{\&quot;viewParticipantsWebcams\&quot;:true,\&quot;viewScreenshare\&quot;:true}}&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UserChangedLocalSettings&quot;,&quot;query&quot;:&quot;mutation UserChangedLocalSettings($settings: jsonb!) {\n  update_user_clientSettings(where: {}, _set: {userClientSettingsJson: $settings}) {\n    affected_rows\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 28 getServerTime" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;28&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getServerTime&quot;,&quot;query&quot;:&quot;query getServerTime {\n  current_time {\n    currentTimestamp\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 29 ChatSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;29&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ChatSubscription&quot;,&quot;query&quot;:&quot;subscription ChatSubscription {\n  chat(\n    order_by: [{public: desc}, {totalUnread: desc}, {participant: {name: asc, userId: asc}}]\n  ) {\n    chatId\n    participant {\n      userId\n      name\n      role\n      color\n      loggedOut\n      avatar\n      isOnline\n      isModerator\n      __typename\n    }\n    totalMessages\n    totalUnread\n    public\n    lastSeenAt\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 30 Patched_MeetingSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;30&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_MeetingSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_MeetingSubscription {\n  meeting {\n    createdTime\n    disabledFeatures\n    durationInSeconds\n    extId\n    endWhenNoModerator\n    endWhenNoModeratorDelayInMinutes\n    lockSettings {\n      disableCam\n      disableMic\n      disableNotes\n      disablePrivateChat\n      disablePublicChat\n      hasActiveLockSetting\n      hideUserList\n      hideViewersCursor\n      hideViewersAnnotation\n      webcamsOnlyForModerator\n      lockOnJoin\n      lockOnJoinConfigurable\n      __typename\n    }\n    metadata {\n      name\n      value\n      __typename\n    }\n    maxPinnedCameras\n    meetingCameraCap\n    meetingId\n    name\n    notifyRecordingIsOn\n    presentationUploadExternalDescription\n    presentationUploadExternalUrl\n    recordingPolicies {\n      allowStartStopRecording\n      autoStartRecording\n      record\n      keepEvents\n      __typename\n    }\n    groups {\n      groupId\n      name\n      __typename\n    }\n    learningDashboard {\n      learningDashboardAccessToken\n      __typename\n    }\n    screenshare {\n      contentType\n      hasAudio\n      screenshareConf\n      screenshareId\n      startedAt\n      stoppedAt\n      stream\n      vidHeight\n      vidWidth\n      voiceConf\n      __typename\n    }\n    usersPolicies {\n      allowModsToEjectCameras\n      allowModsToUnmuteUsers\n      authenticatedGuest\n      guestPolicy\n      maxUserConcurrentAccesses\n      maxUsers\n      meetingLayout\n      moderatorsCanMuteAudio\n      moderatorsCanUnmuteAudio\n      userCameraCap\n      webcamsOnlyForModerator\n      guestLobbyMessage\n      __typename\n    }\n    layout {\n      cameraDockAspectRatio\n      cameraDockIsResizing\n      cameraDockPlacement\n      cameraWithFocus\n      currentLayoutType\n      presentationMinimized\n      propagateLayout\n      updatedAt\n      __typename\n    }\n    isBreakout\n    breakoutPolicies {\n      breakoutRooms\n      captureNotes\n      captureNotesFilename\n      captureSlides\n      captureSlidesFilename\n      freeJoin\n      parentId\n      privateChatEnabled\n      record\n      sequence\n      __typename\n    }\n    html5InstanceId\n    voiceSettings {\n      dialNumber\n      muteOnStart\n      voiceConf\n      telVoice\n      __typename\n    }\n    externalVideo {\n      externalVideoId\n      playerCurrentTime\n      playerPlaybackRate\n      playerPlaying\n      externalVideoUrl\n      startedSharingAt\n      stoppedSharingAt\n      updatedAt\n      __typename\n    }\n    componentsFlags {\n      hasCaption\n      hasBreakoutRoom\n      hasExternalVideo\n      hasPoll\n      hasScreenshare\n      hasTimer\n      showRemainingTime\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 31 Patched_UserListSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;31&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;offset&quot;:0,&quot;limit&quot;:0},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_UserListSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_UserListSubscription($offset: Int!, $limit: Int!) {\n  user(\n    limit: $limit\n    offset: $offset\n    order_by: [{role: asc}, {raiseHandTime: asc_nulls_last}, {awayTime: asc_nulls_last}, {emojiTime: asc_nulls_last}, {isDialIn: desc}, {hasDrawPermissionOnCurrentPage: desc}, {nameSortable: asc}, {userId: asc}]\n  ) {\n    isDialIn\n    userId\n    extId\n    name\n    isModerator\n    role\n    color\n    avatar\n    away\n    raiseHand\n    emoji\n    avatar\n    presenter\n    pinned\n    locked\n    authed\n    mobile\n    guest\n    clientType\n    disconnected\n    loggedOut\n    voice {\n      joined\n      listenOnly\n      talking\n      muted\n      voiceUserId\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      pageId\n      userId\n      __typename\n    }\n    lastBreakoutRoom {\n      isDefaultName\n      sequence\n      shortName\n      currentlyInRoom\n      __typename\n    }\n    reaction {\n      reactionEmoji\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 32 getMeetingRecordingPolicies" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;32&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getMeetingRecordingPolicies&quot;,&quot;query&quot;:&quot;subscription getMeetingRecordingPolicies {\n  meeting_recordingPolicies {\n    allowStartStopRecording\n    autoStartRecording\n    record\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 33 getMeetingRecordingData" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;33&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getMeetingRecordingData&quot;,&quot;query&quot;:&quot;subscription getMeetingRecordingData {\n  meeting_recording {\n    isRecording\n    startedAt\n    startedBy\n    previousRecordedTimeInSeconds\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 34 CurrentUserConnStatus" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;34&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;userId&quot;:&quot;w_lzgwywksyt8l&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;CurrentUserConnStatus&quot;,&quot;query&quot;:&quot;subscription CurrentUserConnStatus($userId: String!) {\n  user_connectionStatusReport(where: {user: {userId: {_eq: $userId}}}) {\n    currentStatus\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 35 talkingIndicatorSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;35&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;limit&quot;:8},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;talkingIndicatorSubscription&quot;,&quot;query&quot;:&quot;subscription talkingIndicatorSubscription($limit: Int!) {\n  user_voice(\n    where: {showTalkingIndicator: {_eq: true}}\n    order_by: [{startTime: asc_nulls_last}]\n    limit: $limit\n  ) {\n    callerName\n    spoke\n    talking\n    floor\n    startTime\n    muted\n    userId\n    user {\n      color\n      name\n      speechLocale\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 36 getIsBreakout" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;36&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getIsBreakout&quot;,&quot;query&quot;:&quot;subscription getIsBreakout {\n  meeting {\n    meetingId\n    isBreakout\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 37 Timer" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;37&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Timer&quot;,&quot;query&quot;:&quot;subscription Timer {\n  timer {\n    accumulated\n    active\n    songTrack\n    time\n    stopwatch\n    running\n    startedOn\n    endedOn\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 38 ProcessedPresentationsSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;38&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ProcessedPresentationsSubscription&quot;,&quot;query&quot;:&quot;subscription ProcessedPresentationsSubscription {\n  pres_presentation(where: {uploadCompleted: {_eq: true}}) {\n    current\n    name\n    presentationId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 39 update_user_clientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;39&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;settings&quot;:&quot;{\&quot;application\&quot;:{\&quot;animations\&quot;:true,\&quot;autoCloseReactionsBar\&quot;:true,\&quot;chatAudioAlerts\&quot;:false,\&quot;chatPushAlerts\&quot;:false,\&quot;darkTheme\&quot;:false,\&quot;directLeaveButton\&quot;:true,\&quot;fallbackLocale\&quot;:\&quot;en\&quot;,\&quot;guestWaitingAudioAlerts\&quot;:true,\&quot;guestWaitingPushAlerts\&quot;:true,\&quot;overrideLocale\&quot;:null,\&quot;paginationEnabled\&quot;:true,\&quot;raiseHandAudioAlerts\&quot;:true,\&quot;raiseHandPushAlerts\&quot;:true,\&quot;selectedLayout\&quot;:\&quot;custom\&quot;,\&quot;userJoinAudioAlerts\&quot;:false,\&quot;userJoinPushAlerts\&quot;:false,\&quot;userLeaveAudioAlerts\&quot;:false,\&quot;userLeavePushAlerts\&quot;:false,\&quot;wakeLock\&quot;:true,\&quot;webcamBorderHighlightColor\&quot;:[],\&quot;whiteboardToolbarAutoHide\&quot;:false,\&quot;locale\&quot;:\&quot;pt-BR\&quot;,\&quot;isRTL\&quot;:false},\&quot;audio\&quot;:{\&quot;inputDeviceId\&quot;:\&quot;undefined\&quot;,\&quot;outputDeviceId\&quot;:\&quot;undefined\&quot;},\&quot;dataSaving\&quot;:{\&quot;viewParticipantsWebcams\&quot;:true,\&quot;viewScreenshare\&quot;:true}}&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UserChangedLocalSettings&quot;,&quot;query&quot;:&quot;mutation UserChangedLocalSettings($settings: jsonb!) {\n  update_user_clientSettings(where: {}, _set: {userClientSettingsJson: $settings}) {\n    affected_rows\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 40 IsTyping" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;40&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;IsTyping&quot;,&quot;query&quot;:&quot;subscription IsTyping($chatId: String!) {\n  user_typing_public(\n    order_by: {startedTypingAt: asc}\n    limit: 4\n    where: {isCurrentlyTyping: {_eq: true}, chatId: {_eq: $chatId}}\n  ) {\n    chatId\n    userId\n    isCurrentlyTyping\n    user {\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 41 GetChatData" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;41&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;GetChatData&quot;,&quot;query&quot;:&quot;query GetChatData($chatId: String!) {\n  chat(where: {chatId: {_eq: $chatId}}) {\n    chatId\n    public\n    participant {\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 42" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;42&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;query&quot;:&quot;{\n  user_welcomeMsgs {\n    welcomeMsg\n    welcomeMsgForModerators\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 43 Patched_chatMessages" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;43&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;offset&quot;:0,&quot;limit&quot;:50},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_chatMessages&quot;,&quot;query&quot;:&quot;subscription Patched_chatMessages($limit: Int!, $offset: Int!) {\n  chat_message_public(limit: $limit, offset: $offset, order_by: {createdAt: asc}) {\n    user {\n      name\n      userId\n      avatar\n      isOnline\n      isModerator\n      color\n      __typename\n    }\n    messageType\n    chatEmphasizedText\n    chatId\n    message\n    messageId\n    createdAt\n    messageMetadata\n    senderName\n    senderRole\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 44 getGuestsCount" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;44&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getGuestsCount&quot;,&quot;query&quot;:&quot;subscription getGuestsCount {\n  user_guest_aggregate(where: {isWaiting: {_eq: true}}) {\n    aggregate {\n      count\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 45 SetSpeechLocale" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;45&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;locale&quot;:&quot;&quot;,&quot;provider&quot;:&quot;webspeech&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;SetSpeechLocale&quot;,&quot;query&quot;:&quot;mutation SetSpeechLocale($locale: String!, $provider: String!) {\n  userSetSpeechLocale(locale: $locale, provider: $provider)\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 46 hasPendingPoll" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;46&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;userId&quot;:&quot;w_lzgwywksyt8l&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;hasPendingPoll&quot;,&quot;query&quot;:&quot;subscription hasPendingPoll($userId: String!) {\n  meeting {\n    polls(\n      where: {ended: {_eq: false}, users: {responded: {_eq: false}, userId: {_eq: $userId}}, userCurrent: {responded: {_eq: false}}}\n    ) {\n      users {\n        responded\n        userId\n        __typename\n      }\n      options {\n        optionDesc\n        optionId\n        pollId\n        __typename\n      }\n      multipleResponses\n      pollId\n      questionText\n      secret\n      type\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 47 PresentationPublishCursor" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;47&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;xPercent&quot;:-1,&quot;yPercent&quot;:-1},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationPublishCursor&quot;,&quot;query&quot;:&quot;mutation PresentationPublishCursor($whiteboardId: String!, $xPercent: Float!, $yPercent: Float!) {\n  presentationPublishCursor(\n    whiteboardId: $whiteboardId\n    xPercent: $xPercent\n    yPercent: $yPercent\n  )\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 48 PresentationSetZoom" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;48&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;presentationId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538&quot;,&quot;pageId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538/1&quot;,&quot;pageNum&quot;:1,&quot;xOffset&quot;:0,&quot;yOffset&quot;:0,&quot;widthRatio&quot;:100,&quot;heightRatio&quot;:100},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationSetZoom&quot;,&quot;query&quot;:&quot;mutation PresentationSetZoom($presentationId: String!, $pageId: String!, $pageNum: Int!, $xOffset: Float!, $yOffset: Float!, $widthRatio: Float!, $heightRatio: Float!) {\n  presentationSetZoom(\n    presentationId: $presentationId\n    pageId: $pageId\n    pageNum: $pageNum\n    xOffset: $xOffset\n    yOffset: $yOffset\n    widthRatio: $widthRatio\n    heightRatio: $heightRatio\n  )\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 49 currentPageWritersSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;49&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;pageId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538/1&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;currentPageWritersSubscription&quot;,&quot;query&quot;:&quot;subscription currentPageWritersSubscription($pageId: String!) {\n  pres_page_writers(where: {pageId: {_eq: $pageId}}) {\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 50 currentPageWritersSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;50&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;currentPageWritersSubscription&quot;,&quot;query&quot;:&quot;subscription currentPageWritersSubscription($pageId: String!) {\n  pres_page_writers(where: {pageId: {_eq: $pageId}}) {\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 51 Patched_UserListSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;51&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;offset&quot;:0,&quot;limit&quot;:50},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_UserListSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_UserListSubscription($offset: Int!, $limit: Int!) {\n  user(\n    limit: $limit\n    offset: $offset\n    order_by: [{role: asc}, {raiseHandTime: asc_nulls_last}, {awayTime: asc_nulls_last}, {emojiTime: asc_nulls_last}, {isDialIn: desc}, {hasDrawPermissionOnCurrentPage: desc}, {nameSortable: asc}, {userId: asc}]\n  ) {\n    isDialIn\n    userId\n    extId\n    name\n    isModerator\n    role\n    color\n    avatar\n    away\n    raiseHand\n    emoji\n    avatar\n    presenter\n    pinned\n    locked\n    authed\n    mobile\n    guest\n    clientType\n    disconnected\n    loggedOut\n    voice {\n      joined\n      listenOnly\n      talking\n      muted\n      voiceUserId\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      pageId\n      userId\n      __typename\n    }\n    lastBreakoutRoom {\n      isDefaultName\n      sequence\n      shortName\n      currentlyInRoom\n      __typename\n    }\n    reaction {\n      reactionEmoji\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Owner - WebSocket Write 52 PresentationPublishCursor" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;52&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;whiteboardId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538/1&quot;,&quot;xPercent&quot;:-3984.222737819025,&quot;yPercent&quot;:-608.5864994199535},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationPublishCursor&quot;,&quot;query&quot;:&quot;mutation PresentationPublishCursor($whiteboardId: String!, $xPercent: Float!, $yPercent: Float!) {\n  presentationPublishCursor(\n    whiteboardId: $whiteboardId\n    xPercent: $xPercent\n    yPercent: $yPercent\n  )\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="1.3 - Owner - Keep Connection (ping/chat)" enabled="true">
          <stringProp name="WhileController.condition">${__groovy(!vars.get(&apos;loop_counter&apos;).equals(&apos;0&apos;))}</stringProp>
        </WhileController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">if (vars.get(&quot;loop_counter&quot;) == null) {
  log.info(&quot;Resetting loop_counter to ${ping_loop_owner} (&quot; + ctx.getThreadGroup().getName() + &quot; &quot; + ctx.getThreadNum() + &quot;)&quot;);
  vars.put(&quot;loop_counter&quot;, &quot;${ping_loop_owner}&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="1.3.1 - Owner - WebSocket Read anything" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="dataType">Text</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <stringProp name="readTimeout">10000</stringProp>
            <boolProp name="optional">true</boolProp>
          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${current_dir}/scripts/process_received.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script"></stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${__groovy(vars.get(&apos;is_ka&apos;).equals(&apos;true&apos;))}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="WebSocket Single Write Sampler" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;${write_next_id}&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ChatSetTyping&quot;,&quot;query&quot;:&quot;mutation ChatSetTyping($chatId: String!) {\n  chatSetTyping(chatId: $chatId)\n}&quot;}}
</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="WebSocket Single Write Sampler" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;${write_next_id}&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatMessageInMarkdownFormat&quot;:&quot;Oi&quot;,&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ChatSendMessage&quot;,&quot;query&quot;:&quot;mutation ChatSendMessage($chatId: String!, $chatMessageInMarkdownFormat: String!) {\n  chatSendMessage(\n    chatId: $chatId\n    chatMessageInMarkdownFormat: $chatMessageInMarkdownFormat\n  )\n}&quot;}}
</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="WebSocket Single Write Sampler" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;${write_next_id}&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;,&quot;lastSeenAt&quot;:&quot;2024-04-24T18:26:28.382Z&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UpdateChatUser&quot;,&quot;query&quot;:&quot;mutation UpdateChatUser($chatId: String, $lastSeenAt: timestamptz) {\n  update_chat_user(\n    where: {chatId: {_eq: $chatId}, _or: [{lastSeenAt: {_lt: $lastSeenAt}}, {lastSeenAt: {_is_null: true}}]}\n    _set: {lastSeenAt: $lastSeenAt}\n  ) {\n    affected_rows\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.5 - Owner - End Meeting" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <eu.luminis.jmeter.wssampler.TextFrameFilter guiclass="eu.luminis.jmeter.wssampler.TextFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.TextFrameFilter" testname="ws Text Frame Filter" enabled="true">
            <stringProp name="comparisonType">IsPlain</stringProp>
            <stringProp name="TestPlan.comments">filters (i.e. discards) all ws text frames that are received by sampler in its scope</stringProp>
            <stringProp name="matchValue"></stringProp>
          </eu.luminis.jmeter.wssampler.TextFrameFilter>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="1.5.1 - Owner - WebSocket Close" enabled="true">
            <stringProp name="statusCode">1000</stringProp>
            <stringProp name="readTimeout">5000</stringProp>
          </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2092838583">1000: sampler requested close</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.5.2 - Owner - End Meeting" enabled="true">
            <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.path">/bigbluebutton/api/end</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="meetingID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${meetingID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">meetingID</stringProp>
                </elementProp>
                <elementProp name="moderatorPW" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${moderatorPW}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">moderatorPW</stringProp>
                </elementProp>
                <elementProp name="checksum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${__digest(SHA-1,endmeetingID=${meetingID}&amp;moderatorPW=${moderatorPW},${salt},,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">checksum</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Successful answer" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Guest - Thread Group" enabled="true">
        <stringProp name="ThreadGroup.num_threads">${threads_guest}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ramp_up}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="variableName">loop_times</stringProp>
          <stringProp name="outputFormat">0</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">3</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">true</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">guest_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="2.1 - Guest - Wait For Meeting Running" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript(&quot;${meeting_running}&quot; != &quot;true&quot;,)}</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.1.1 - Guest - Verify  if room is running" enabled="true">
            <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.path">/bigbluebutton/api/isMeetingRunning</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="meetingID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${meetingID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">meetingID</stringProp>
                </elementProp>
                <elementProp name="checksum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__digest(SHA-1,isMeetingRunningmeetingID=${meetingID},${salt},,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">checksum</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract meeting_running" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">meeting_running</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;running&quot;:&quot;(.*?)&quot;}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">false</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Extract meeting_running" enabled="true">
              <stringProp name="XPathExtractor.default">false</stringProp>
              <stringProp name="XPathExtractor.refname">meeting_running</stringProp>
              <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">/response/running[1]</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Wait 10s" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.2 - Guest - Join and Enter Meeting" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.2.1 - Guest - Join" enabled="true">
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <intProp name="HTTPSampler.concurrentPool">4</intProp>
            <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.path">/bigbluebutton/api/join</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fullName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${guestUserName}-${guest_counter}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">fullName</stringProp>
                </elementProp>
                <elementProp name="meetingID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${meetingID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">meetingID</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${attendeePW}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="redirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${redirect}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">redirect</stringProp>
                </elementProp>
                <elementProp name="checksum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__digest(SHA-1,joinfullName=${guestUserName}-${guest_counter}&amp;meetingID=${meetingID}&amp;password=${attendeePW}&amp;redirect=${redirect},${salt},,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">checksum</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">RESPONSE_CODE</stringProp>
              <stringProp name="RegexExtractor.regex">HTTP/1.1 (\d\d\d) OK</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Successful answer" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1129916929">&lt;div name=&apos;error&apos;&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">MensagemDeErroNaPagina</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Has client script" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2037466604">__meteor_runtime_config__ = JSON.parse</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">assertion error: __meteor_runtime_config__ = JSON.parse\(decodeURIComponent\(</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Session Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">.+sessionToken=(.+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">error_on_extractor</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.2.2 - Guest - Enter" enabled="true">
            <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.path">/bigbluebutton/api/enter</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sessionToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${session_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionToken</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Successful answer" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Get meeting_id;internal_user_id;auth_token;extern_user_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">meeting_id; internal_user_id; auth_token; extern_user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.meetingID; $.response.internalUserID; $.response.authToken; $.response.externUserID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">prev.setIgnore();
vars.remove(&quot;authenticated&quot;);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.3 - Guest - Connect websocket and subscribe" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">200</stringProp>
            <stringProp name="RandomTimer.range">300.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="2.3.1 - Owner - WebSocket Open Connection" enabled="true">
            <boolProp name="TLS">true</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">443</stringProp>
            <stringProp name="path">/v1/graphql</stringProp>
            <stringProp name="connectTimeout">30000</stringProp>
            <stringProp name="readTimeout">30000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="2.3.2 - Owner - WebSocket Write connection_init" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;type&quot;:&quot;connection_init&quot;,&quot;payload&quot;:{&quot;headers&quot;:{&quot;X-Session-Token&quot;:&quot;${session_token}&quot;}}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="2.3.3 - Owner - WebSocket Write getUserCurrent" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;id&quot;:&quot;1&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getUserCurrent&quot;,&quot;query&quot;:&quot;subscription getUserCurrent {\n  user_current {\n    userId\n    authToken\n    joinErrorCode\n    joinErrorMessage\n    joined\n    ejectReasonCode\n    loggedOut\n    meeting {\n      ended\n      endedReasonCode\n      endedByUserName\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="2.3.4 - Owner - WebSocket Write getUserInfo" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;id&quot;:&quot;2&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getUserInfo&quot;,&quot;query&quot;:&quot;query getUserInfo {\n  meeting {\n    meetingId\n    name\n    logoutUrl\n    bannerColor\n    bannerText\n    __typename\n  }\n  user_current {\n    extId\n    name\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="2.3.5 - Owner - WebSocket Write UserJoin" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="payloadType">Text</stringProp>
            <stringProp name="requestData">{&quot;id&quot;:&quot;3&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;authToken&quot;:&quot;${auth_token}&quot;,&quot;clientType&quot;:&quot;HTML5&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UserJoin&quot;,&quot;query&quot;:&quot;mutation UserJoin($authToken: String!, $clientType: String!) {\n  userJoinMeeting(authToken: $authToken, clientType: $clientType)\n}&quot;}}</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script"></stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__jexl3(vars.get(&quot;authenticated&quot;) == null)}</stringProp>
          </WhileController>
          <hashTree>
            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="1.2.8 - Owner - WebSocket Read getUserInfo" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="dataType">Text</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <stringProp name="readTimeout">6000</stringProp>
              <boolProp name="optional">false</boolProp>
            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${current_dir}/scripts/process_received.groovy</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.3.11 - Guest - Subs" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 4 userCurrentSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;4&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;userCurrentSubscription&quot;,&quot;query&quot;:&quot;subscription userCurrentSubscription {\n  user_current {\n    authToken\n    authed\n    avatar\n    away\n    banned\n    clientType\n    color\n    disconnected\n    echoTestRunningAt\n    ejectReason\n    ejectReasonCode\n    ejected\n    emoji\n    enforceLayout\n    expired\n    extId\n    guest\n    guestStatus\n    hasDrawPermissionOnCurrentPage\n    inactivityWarningDisplay\n    inactivityWarningTimeoutSecs\n    isDialIn\n    isModerator\n    isOnline\n    isRunningEchoTest\n    joinErrorCode\n    joinErrorMessage\n    joined\n    locked\n    loggedOut\n    mobile\n    name\n    nameSortable\n    pinned\n    presenter\n    raiseHand\n    registeredAt\n    registeredOn\n    role\n    speechLocale\n    userId\n    customParameters {\n      parameter\n      value\n      __typename\n    }\n    lastBreakoutRoom {\n      breakoutRoomId\n      currentlyInRoom\n      isDefaultName\n      sequence\n      shortName\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    userClientSettings {\n      userClientSettingsJson\n      __typename\n    }\n    voice {\n      joined\n      muted\n      spoke\n      listenOnly\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      changedModeOn\n      pageId\n      presentationId\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 5 voiceUserStream" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;5&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;voiceUserStream&quot;,&quot;query&quot;:&quot;subscription voiceUserStream {\n  user_voice_mongodb_adapter_stream(\n    cursor: {initial_value: {voiceUpdatedAt: \&quot;2020-01-01\&quot;}}\n    batch_size: 100\n  ) {\n    callerName\n    callerNum\n    callingWith\n    endTime\n    endedAt\n    floor\n    hideTalkingIndicatorAt\n    joined\n    lastFloorTime\n    lastSpeakChangedAt\n    listenOnly\n    muted\n    showTalkingIndicator\n    spoke\n    startTime\n    startedAt\n    talking\n    userId\n    voiceConf\n    voiceConfCallSession\n    voiceConfCallState\n    voiceConfClientSession\n    voiceUpdatedAt\n    voiceUserId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 6 getClientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;6&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getClientSettings&quot;,&quot;query&quot;:&quot;query getClientSettings {\n  meeting {\n    clientSettings {\n      clientSettingsJson\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 7 Patched_MeetingSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;7&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_MeetingSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_MeetingSubscription {\n  meeting {\n    createdTime\n    disabledFeatures\n    durationInSeconds\n    extId\n    endWhenNoModerator\n    endWhenNoModeratorDelayInMinutes\n    lockSettings {\n      disableCam\n      disableMic\n      disableNotes\n      disablePrivateChat\n      disablePublicChat\n      hasActiveLockSetting\n      hideUserList\n      hideViewersCursor\n      hideViewersAnnotation\n      webcamsOnlyForModerator\n      lockOnJoin\n      lockOnJoinConfigurable\n      __typename\n    }\n    metadata {\n      name\n      value\n      __typename\n    }\n    maxPinnedCameras\n    meetingCameraCap\n    meetingId\n    name\n    notifyRecordingIsOn\n    presentationUploadExternalDescription\n    presentationUploadExternalUrl\n    recordingPolicies {\n      allowStartStopRecording\n      autoStartRecording\n      record\n      keepEvents\n      __typename\n    }\n    groups {\n      groupId\n      name\n      __typename\n    }\n    learningDashboard {\n      learningDashboardAccessToken\n      __typename\n    }\n    screenshare {\n      contentType\n      hasAudio\n      screenshareConf\n      screenshareId\n      startedAt\n      stoppedAt\n      stream\n      vidHeight\n      vidWidth\n      voiceConf\n      __typename\n    }\n    usersPolicies {\n      allowModsToEjectCameras\n      allowModsToUnmuteUsers\n      authenticatedGuest\n      guestPolicy\n      maxUserConcurrentAccesses\n      maxUsers\n      meetingLayout\n      moderatorsCanMuteAudio\n      moderatorsCanUnmuteAudio\n      userCameraCap\n      webcamsOnlyForModerator\n      guestLobbyMessage\n      __typename\n    }\n    layout {\n      cameraDockAspectRatio\n      cameraDockIsResizing\n      cameraDockPlacement\n      cameraWithFocus\n      currentLayoutType\n      presentationMinimized\n      propagateLayout\n      updatedAt\n      __typename\n    }\n    isBreakout\n    breakoutPolicies {\n      breakoutRooms\n      captureNotes\n      captureNotesFilename\n      captureSlides\n      captureSlidesFilename\n      freeJoin\n      parentId\n      privateChatEnabled\n      record\n      sequence\n      __typename\n    }\n    html5InstanceId\n    voiceSettings {\n      dialNumber\n      muteOnStart\n      voiceConf\n      telVoice\n      __typename\n    }\n    externalVideo {\n      externalVideoId\n      playerCurrentTime\n      playerPlaybackRate\n      playerPlaying\n      externalVideoUrl\n      startedSharingAt\n      stoppedSharingAt\n      updatedAt\n      __typename\n    }\n    componentsFlags {\n      hasCaption\n      hasBreakoutRoom\n      hasExternalVideo\n      hasPoll\n      hasScreenshare\n      hasTimer\n      showRemainingTime\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 8 getUserInfo" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;8&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getUserInfo&quot;,&quot;query&quot;:&quot;query getUserInfo {\n  meeting {\n    meetingId\n    name\n    logoutUrl\n    bannerColor\n    bannerText\n    __typename\n  }\n  user_current {\n    extId\n    name\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 9 getCustomParameter" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;9&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getCustomParameter&quot;,&quot;query&quot;:&quot;query getCustomParameter {\n  user_customParameter {\n    parameter\n    value\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 10 getClientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;10&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getClientSettings&quot;,&quot;query&quot;:&quot;query getClientSettings {\n  meeting {\n    clientSettings {\n      clientSettingsJson\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 11 isSharedNotesPinned" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;11&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;isSharedNotesPinned&quot;,&quot;query&quot;:&quot;subscription isSharedNotesPinned {\n  sharedNotes(where: {pinned: {_eq: true}}) {\n    pinned\n    sharedNotesExtId\n    model\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 12 Patched_userCurrentSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;12&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_userCurrentSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_userCurrentSubscription {\n  user_current {\n    authToken\n    authed\n    avatar\n    away\n    banned\n    clientType\n    color\n    disconnected\n    echoTestRunningAt\n    ejectReason\n    ejectReasonCode\n    ejected\n    emoji\n    enforceLayout\n    expired\n    extId\n    guest\n    guestStatus\n    hasDrawPermissionOnCurrentPage\n    inactivityWarningDisplay\n    inactivityWarningTimeoutSecs\n    isDialIn\n    isModerator\n    isOnline\n    isRunningEchoTest\n    joinErrorCode\n    joinErrorMessage\n    joined\n    locked\n    loggedOut\n    mobile\n    name\n    nameSortable\n    pinned\n    presenter\n    raiseHand\n    registeredAt\n    registeredOn\n    role\n    speechLocale\n    userId\n    customParameters {\n      parameter\n      value\n      __typename\n    }\n    lastBreakoutRoom {\n      breakoutRoomId\n      currentlyInRoom\n      isDefaultName\n      sequence\n      shortName\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    userClientSettings {\n      userClientSettingsJson\n      __typename\n    }\n    voice {\n      joined\n      muted\n      spoke\n      listenOnly\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      changedModeOn\n      pageId\n      presentationId\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 13 isSharedNotesPinned" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;13&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;isSharedNotesPinned&quot;,&quot;query&quot;:&quot;subscription isSharedNotesPinned {\n  sharedNotes(where: {pinned: {_eq: true}}) {\n    pinned\n    sharedNotesExtId\n    model\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 14 subscription chat" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;14&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;query&quot;:&quot;subscription {\n  chat(where: {totalUnread: {_gt: 0}, visible: {_eq: true}}) {\n    chatId\n    totalUnread\n    participant {\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 15 GetPadLastRev" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;15&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;externalId&quot;:&quot;notes&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;GetPadLastRev&quot;,&quot;query&quot;:&quot;subscription GetPadLastRev($externalId: String!) {\n  sharedNotes(where: {sharedNotesExtId: {_eq: $externalId}}) {\n    lastRev\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 16 UsersCount" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;16&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UsersCount&quot;,&quot;query&quot;:&quot;subscription UsersCount {\n  user_aggregate {\n    aggregate {\n      count\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 17 MeetingPermissions" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;17&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;MeetingPermissions&quot;,&quot;query&quot;:&quot;subscription MeetingPermissions {\n  meeting {\n    meetingId\n    isBreakout\n    lockSettings {\n      disableCam\n      disableMic\n      disableNotes\n      disablePrivateChat\n      disablePublicChat\n      hasActiveLockSetting\n      hideUserList\n      hideViewersCursor\n      webcamsOnlyForModerator\n      __typename\n    }\n    usersPolicies {\n      allowModsToEjectCameras\n      allowModsToUnmuteUsers\n      authenticatedGuest\n      guestPolicy\n      maxUserConcurrentAccesses\n      maxUsers\n      meetingLayout\n      userCameraCap\n      webcamsOnlyForModerator\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 18 CurrentPresentationPagesSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;18&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;CurrentPresentationPagesSubscription&quot;,&quot;query&quot;:&quot;subscription CurrentPresentationPagesSubscription {\n  pres_page_curr {\n    height\n    isCurrentPage\n    num\n    pageId\n    scaledHeight\n    scaledViewBoxHeight\n    scaledViewBoxWidth\n    scaledWidth\n    svgUrl: urlsJson(path: \&quot;$.svg\&quot;)\n    width\n    xOffset\n    yOffset\n    presentationId\n    content\n    downloadFileUri\n    totalPages\n    downloadable\n    presentationName\n    isDefaultPresentation\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 19 PollPublished" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;19&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PollPublished&quot;,&quot;query&quot;:&quot;subscription PollPublished {\n  poll {\n    published\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 20 CursorSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;20&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;CursorSubscription&quot;,&quot;query&quot;:&quot;subscription CursorSubscription {\n  pres_page_cursor {\n    userId\n    isCurrentPage\n    pageId\n    presentationId\n    user {\n      name\n      presenter\n      role\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 21 getCursorCoordinatesStream" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;21&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getCursorCoordinatesStream&quot;,&quot;query&quot;:&quot;subscription getCursorCoordinatesStream {\n  pres_page_cursor_stream(\n    cursor: {initial_value: {lastUpdatedAt: \&quot;2020-01-01\&quot;}}\n    batch_size: 100\n  ) {\n    xPercent\n    yPercent\n    lastUpdatedAt\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 22 annotationsStream" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;22&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;lastUpdatedAt&quot;:&quot;1970-01-01T00:00:00.000Z&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;annotationsStream&quot;,&quot;query&quot;:&quot;subscription annotationsStream($lastUpdatedAt: timestamptz) {\n  pres_annotation_curr_stream(\n    batch_size: 1000\n    cursor: {initial_value: {lastUpdatedAt: $lastUpdatedAt}}\n  ) {\n    annotationId\n    annotationInfo\n    lastUpdatedAt\n    pageId\n    presentationId\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 23 PresentationsSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;23&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationsSubscription&quot;,&quot;query&quot;:&quot;subscription PresentationsSubscription {\n  pres_presentation {\n    uploadInProgress\n    current\n    downloadFileUri\n    downloadable\n    uploadErrorDetailsJson\n    uploadErrorMsgKey\n    filenameConverted\n    isDefault\n    name\n    totalPages\n    totalPagesUploaded\n    presentationId\n    removable\n    uploadCompleted\n    exportToChatInProgress\n    exportToChatStatus\n    exportToChatCurrentPage\n    exportToChatHasError\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 24 PresentationsSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;24&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationsSubscription&quot;,&quot;query&quot;:&quot;subscription PresentationsSubscription {\n  pres_presentation {\n    uploadInProgress\n    current\n    downloadFileUri\n    downloadable\n    uploadErrorDetailsJson\n    uploadErrorMsgKey\n    filenameConverted\n    isDefault\n    name\n    totalPages\n    totalPagesUploaded\n    presentationId\n    removable\n    uploadCompleted\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 25 RaisedHandUsers" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;25&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;RaisedHandUsers&quot;,&quot;query&quot;:&quot;subscription RaisedHandUsers {\n  user(\n    where: {raiseHand: {_eq: true}}\n    order_by: [{raiseHandTime: asc_nulls_last}]\n  ) {\n    userId\n    name\n    color\n    presenter\n    isModerator\n    raiseHand\n    raiseHandTime\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 26 padSession" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;26&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;padSession&quot;,&quot;query&quot;:&quot;subscription padSession {\n  sharedNotes_session {\n    sessionId\n    sharedNotesExtId\n    padId\n    sharedNotes {\n      padId\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 27 update_user_clientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;27&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;settings&quot;:&quot;{\&quot;application\&quot;:{\&quot;animations\&quot;:true,\&quot;autoCloseReactionsBar\&quot;:true,\&quot;chatAudioAlerts\&quot;:false,\&quot;chatPushAlerts\&quot;:false,\&quot;darkTheme\&quot;:false,\&quot;directLeaveButton\&quot;:true,\&quot;fallbackLocale\&quot;:\&quot;en\&quot;,\&quot;guestWaitingAudioAlerts\&quot;:true,\&quot;guestWaitingPushAlerts\&quot;:true,\&quot;overrideLocale\&quot;:null,\&quot;paginationEnabled\&quot;:true,\&quot;raiseHandAudioAlerts\&quot;:true,\&quot;raiseHandPushAlerts\&quot;:true,\&quot;selectedLayout\&quot;:\&quot;custom\&quot;,\&quot;userJoinAudioAlerts\&quot;:false,\&quot;userJoinPushAlerts\&quot;:false,\&quot;userLeaveAudioAlerts\&quot;:false,\&quot;userLeavePushAlerts\&quot;:false,\&quot;wakeLock\&quot;:true,\&quot;webcamBorderHighlightColor\&quot;:[],\&quot;whiteboardToolbarAutoHide\&quot;:false,\&quot;locale\&quot;:\&quot;pt-BR\&quot;,\&quot;isRTL\&quot;:false},\&quot;audio\&quot;:{\&quot;inputDeviceId\&quot;:\&quot;undefined\&quot;,\&quot;outputDeviceId\&quot;:\&quot;undefined\&quot;},\&quot;dataSaving\&quot;:{\&quot;viewParticipantsWebcams\&quot;:true,\&quot;viewScreenshare\&quot;:true}}&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UserChangedLocalSettings&quot;,&quot;query&quot;:&quot;mutation UserChangedLocalSettings($settings: jsonb!) {\n  update_user_clientSettings(where: {}, _set: {userClientSettingsJson: $settings}) {\n    affected_rows\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 28 getServerTime" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;28&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getServerTime&quot;,&quot;query&quot;:&quot;query getServerTime {\n  current_time {\n    currentTimestamp\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 29 ChatSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;29&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ChatSubscription&quot;,&quot;query&quot;:&quot;subscription ChatSubscription {\n  chat(\n    order_by: [{public: desc}, {totalUnread: desc}, {participant: {name: asc, userId: asc}}]\n  ) {\n    chatId\n    participant {\n      userId\n      name\n      role\n      color\n      loggedOut\n      avatar\n      isOnline\n      isModerator\n      __typename\n    }\n    totalMessages\n    totalUnread\n    public\n    lastSeenAt\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 30 Patched_MeetingSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;30&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_MeetingSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_MeetingSubscription {\n  meeting {\n    createdTime\n    disabledFeatures\n    durationInSeconds\n    extId\n    endWhenNoModerator\n    endWhenNoModeratorDelayInMinutes\n    lockSettings {\n      disableCam\n      disableMic\n      disableNotes\n      disablePrivateChat\n      disablePublicChat\n      hasActiveLockSetting\n      hideUserList\n      hideViewersCursor\n      hideViewersAnnotation\n      webcamsOnlyForModerator\n      lockOnJoin\n      lockOnJoinConfigurable\n      __typename\n    }\n    metadata {\n      name\n      value\n      __typename\n    }\n    maxPinnedCameras\n    meetingCameraCap\n    meetingId\n    name\n    notifyRecordingIsOn\n    presentationUploadExternalDescription\n    presentationUploadExternalUrl\n    recordingPolicies {\n      allowStartStopRecording\n      autoStartRecording\n      record\n      keepEvents\n      __typename\n    }\n    groups {\n      groupId\n      name\n      __typename\n    }\n    learningDashboard {\n      learningDashboardAccessToken\n      __typename\n    }\n    screenshare {\n      contentType\n      hasAudio\n      screenshareConf\n      screenshareId\n      startedAt\n      stoppedAt\n      stream\n      vidHeight\n      vidWidth\n      voiceConf\n      __typename\n    }\n    usersPolicies {\n      allowModsToEjectCameras\n      allowModsToUnmuteUsers\n      authenticatedGuest\n      guestPolicy\n      maxUserConcurrentAccesses\n      maxUsers\n      meetingLayout\n      moderatorsCanMuteAudio\n      moderatorsCanUnmuteAudio\n      userCameraCap\n      webcamsOnlyForModerator\n      guestLobbyMessage\n      __typename\n    }\n    layout {\n      cameraDockAspectRatio\n      cameraDockIsResizing\n      cameraDockPlacement\n      cameraWithFocus\n      currentLayoutType\n      presentationMinimized\n      propagateLayout\n      updatedAt\n      __typename\n    }\n    isBreakout\n    breakoutPolicies {\n      breakoutRooms\n      captureNotes\n      captureNotesFilename\n      captureSlides\n      captureSlidesFilename\n      freeJoin\n      parentId\n      privateChatEnabled\n      record\n      sequence\n      __typename\n    }\n    html5InstanceId\n    voiceSettings {\n      dialNumber\n      muteOnStart\n      voiceConf\n      telVoice\n      __typename\n    }\n    externalVideo {\n      externalVideoId\n      playerCurrentTime\n      playerPlaybackRate\n      playerPlaying\n      externalVideoUrl\n      startedSharingAt\n      stoppedSharingAt\n      updatedAt\n      __typename\n    }\n    componentsFlags {\n      hasCaption\n      hasBreakoutRoom\n      hasExternalVideo\n      hasPoll\n      hasScreenshare\n      hasTimer\n      showRemainingTime\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 31 Patched_UserListSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;31&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;offset&quot;:0,&quot;limit&quot;:0},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_UserListSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_UserListSubscription($offset: Int!, $limit: Int!) {\n  user(\n    limit: $limit\n    offset: $offset\n    order_by: [{role: asc}, {raiseHandTime: asc_nulls_last}, {awayTime: asc_nulls_last}, {emojiTime: asc_nulls_last}, {isDialIn: desc}, {hasDrawPermissionOnCurrentPage: desc}, {nameSortable: asc}, {userId: asc}]\n  ) {\n    isDialIn\n    userId\n    extId\n    name\n    isModerator\n    role\n    color\n    avatar\n    away\n    raiseHand\n    emoji\n    avatar\n    presenter\n    pinned\n    locked\n    authed\n    mobile\n    guest\n    clientType\n    disconnected\n    loggedOut\n    voice {\n      joined\n      listenOnly\n      talking\n      muted\n      voiceUserId\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      pageId\n      userId\n      __typename\n    }\n    lastBreakoutRoom {\n      isDefaultName\n      sequence\n      shortName\n      currentlyInRoom\n      __typename\n    }\n    reaction {\n      reactionEmoji\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 32 getMeetingRecordingPolicies" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;32&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getMeetingRecordingPolicies&quot;,&quot;query&quot;:&quot;subscription getMeetingRecordingPolicies {\n  meeting_recordingPolicies {\n    allowStartStopRecording\n    autoStartRecording\n    record\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 33 getMeetingRecordingData" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;33&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getMeetingRecordingData&quot;,&quot;query&quot;:&quot;subscription getMeetingRecordingData {\n  meeting_recording {\n    isRecording\n    startedAt\n    startedBy\n    previousRecordedTimeInSeconds\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 34 CurrentUserConnStatus" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;34&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;userId&quot;:&quot;w_lzgwywksyt8l&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;CurrentUserConnStatus&quot;,&quot;query&quot;:&quot;subscription CurrentUserConnStatus($userId: String!) {\n  user_connectionStatusReport(where: {user: {userId: {_eq: $userId}}}) {\n    currentStatus\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 35 talkingIndicatorSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;35&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;limit&quot;:8},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;talkingIndicatorSubscription&quot;,&quot;query&quot;:&quot;subscription talkingIndicatorSubscription($limit: Int!) {\n  user_voice(\n    where: {showTalkingIndicator: {_eq: true}}\n    order_by: [{startTime: asc_nulls_last}]\n    limit: $limit\n  ) {\n    callerName\n    spoke\n    talking\n    floor\n    startTime\n    muted\n    userId\n    user {\n      color\n      name\n      speechLocale\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 36 getIsBreakout" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;36&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getIsBreakout&quot;,&quot;query&quot;:&quot;subscription getIsBreakout {\n  meeting {\n    meetingId\n    isBreakout\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 37 Timer" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;37&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Timer&quot;,&quot;query&quot;:&quot;subscription Timer {\n  timer {\n    accumulated\n    active\n    songTrack\n    time\n    stopwatch\n    running\n    startedOn\n    endedOn\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 38 ProcessedPresentationsSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;38&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ProcessedPresentationsSubscription&quot;,&quot;query&quot;:&quot;subscription ProcessedPresentationsSubscription {\n  pres_presentation(where: {uploadCompleted: {_eq: true}}) {\n    current\n    name\n    presentationId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 39 update_user_clientSettings" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;39&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;settings&quot;:&quot;{\&quot;application\&quot;:{\&quot;animations\&quot;:true,\&quot;autoCloseReactionsBar\&quot;:true,\&quot;chatAudioAlerts\&quot;:false,\&quot;chatPushAlerts\&quot;:false,\&quot;darkTheme\&quot;:false,\&quot;directLeaveButton\&quot;:true,\&quot;fallbackLocale\&quot;:\&quot;en\&quot;,\&quot;guestWaitingAudioAlerts\&quot;:true,\&quot;guestWaitingPushAlerts\&quot;:true,\&quot;overrideLocale\&quot;:null,\&quot;paginationEnabled\&quot;:true,\&quot;raiseHandAudioAlerts\&quot;:true,\&quot;raiseHandPushAlerts\&quot;:true,\&quot;selectedLayout\&quot;:\&quot;custom\&quot;,\&quot;userJoinAudioAlerts\&quot;:false,\&quot;userJoinPushAlerts\&quot;:false,\&quot;userLeaveAudioAlerts\&quot;:false,\&quot;userLeavePushAlerts\&quot;:false,\&quot;wakeLock\&quot;:true,\&quot;webcamBorderHighlightColor\&quot;:[],\&quot;whiteboardToolbarAutoHide\&quot;:false,\&quot;locale\&quot;:\&quot;pt-BR\&quot;,\&quot;isRTL\&quot;:false},\&quot;audio\&quot;:{\&quot;inputDeviceId\&quot;:\&quot;undefined\&quot;,\&quot;outputDeviceId\&quot;:\&quot;undefined\&quot;},\&quot;dataSaving\&quot;:{\&quot;viewParticipantsWebcams\&quot;:true,\&quot;viewScreenshare\&quot;:true}}&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UserChangedLocalSettings&quot;,&quot;query&quot;:&quot;mutation UserChangedLocalSettings($settings: jsonb!) {\n  update_user_clientSettings(where: {}, _set: {userClientSettingsJson: $settings}) {\n    affected_rows\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 40 IsTyping" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;40&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;IsTyping&quot;,&quot;query&quot;:&quot;subscription IsTyping($chatId: String!) {\n  user_typing_public(\n    order_by: {startedTypingAt: asc}\n    limit: 4\n    where: {isCurrentlyTyping: {_eq: true}, chatId: {_eq: $chatId}}\n  ) {\n    chatId\n    userId\n    isCurrentlyTyping\n    user {\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 41 GetChatData" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;41&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;GetChatData&quot;,&quot;query&quot;:&quot;query GetChatData($chatId: String!) {\n  chat(where: {chatId: {_eq: $chatId}}) {\n    chatId\n    public\n    participant {\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 42" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;42&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;query&quot;:&quot;{\n  user_welcomeMsgs {\n    welcomeMsg\n    welcomeMsgForModerators\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 43 Patched_chatMessages" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;43&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;offset&quot;:0,&quot;limit&quot;:50},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_chatMessages&quot;,&quot;query&quot;:&quot;subscription Patched_chatMessages($limit: Int!, $offset: Int!) {\n  chat_message_public(limit: $limit, offset: $offset, order_by: {createdAt: asc}) {\n    user {\n      name\n      userId\n      avatar\n      isOnline\n      isModerator\n      color\n      __typename\n    }\n    messageType\n    chatEmphasizedText\n    chatId\n    message\n    messageId\n    createdAt\n    messageMetadata\n    senderName\n    senderRole\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 44 getGuestsCount" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;44&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;getGuestsCount&quot;,&quot;query&quot;:&quot;subscription getGuestsCount {\n  user_guest_aggregate(where: {isWaiting: {_eq: true}}) {\n    aggregate {\n      count\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 45 SetSpeechLocale" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;45&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;locale&quot;:&quot;&quot;,&quot;provider&quot;:&quot;webspeech&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;SetSpeechLocale&quot;,&quot;query&quot;:&quot;mutation SetSpeechLocale($locale: String!, $provider: String!) {\n  userSetSpeechLocale(locale: $locale, provider: $provider)\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 46 hasPendingPoll" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;46&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;userId&quot;:&quot;w_lzgwywksyt8l&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;hasPendingPoll&quot;,&quot;query&quot;:&quot;subscription hasPendingPoll($userId: String!) {\n  meeting {\n    polls(\n      where: {ended: {_eq: false}, users: {responded: {_eq: false}, userId: {_eq: $userId}}, userCurrent: {responded: {_eq: false}}}\n    ) {\n      users {\n        responded\n        userId\n        __typename\n      }\n      options {\n        optionDesc\n        optionId\n        pollId\n        __typename\n      }\n      multipleResponses\n      pollId\n      questionText\n      secret\n      type\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 47 PresentationPublishCursor" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;47&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;xPercent&quot;:-1,&quot;yPercent&quot;:-1},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationPublishCursor&quot;,&quot;query&quot;:&quot;mutation PresentationPublishCursor($whiteboardId: String!, $xPercent: Float!, $yPercent: Float!) {\n  presentationPublishCursor(\n    whiteboardId: $whiteboardId\n    xPercent: $xPercent\n    yPercent: $yPercent\n  )\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 48 PresentationSetZoom" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;48&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;presentationId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538&quot;,&quot;pageId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538/1&quot;,&quot;pageNum&quot;:1,&quot;xOffset&quot;:0,&quot;yOffset&quot;:0,&quot;widthRatio&quot;:100,&quot;heightRatio&quot;:100},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationSetZoom&quot;,&quot;query&quot;:&quot;mutation PresentationSetZoom($presentationId: String!, $pageId: String!, $pageNum: Int!, $xOffset: Float!, $yOffset: Float!, $widthRatio: Float!, $heightRatio: Float!) {\n  presentationSetZoom(\n    presentationId: $presentationId\n    pageId: $pageId\n    pageNum: $pageNum\n    xOffset: $xOffset\n    yOffset: $yOffset\n    widthRatio: $widthRatio\n    heightRatio: $heightRatio\n  )\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 49 currentPageWritersSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;49&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;pageId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538/1&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;currentPageWritersSubscription&quot;,&quot;query&quot;:&quot;subscription currentPageWritersSubscription($pageId: String!) {\n  pres_page_writers(where: {pageId: {_eq: $pageId}}) {\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 50 currentPageWritersSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;50&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;currentPageWritersSubscription&quot;,&quot;query&quot;:&quot;subscription currentPageWritersSubscription($pageId: String!) {\n  pres_page_writers(where: {pageId: {_eq: $pageId}}) {\n    userId\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 51 Patched_UserListSubscription" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;51&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;offset&quot;:0,&quot;limit&quot;:50},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;Patched_UserListSubscription&quot;,&quot;query&quot;:&quot;subscription Patched_UserListSubscription($offset: Int!, $limit: Int!) {\n  user(\n    limit: $limit\n    offset: $offset\n    order_by: [{role: asc}, {raiseHandTime: asc_nulls_last}, {awayTime: asc_nulls_last}, {emojiTime: asc_nulls_last}, {isDialIn: desc}, {hasDrawPermissionOnCurrentPage: desc}, {nameSortable: asc}, {userId: asc}]\n  ) {\n    isDialIn\n    userId\n    extId\n    name\n    isModerator\n    role\n    color\n    avatar\n    away\n    raiseHand\n    emoji\n    avatar\n    presenter\n    pinned\n    locked\n    authed\n    mobile\n    guest\n    clientType\n    disconnected\n    loggedOut\n    voice {\n      joined\n      listenOnly\n      talking\n      muted\n      voiceUserId\n      __typename\n    }\n    cameras {\n      streamId\n      __typename\n    }\n    presPagesWritable {\n      isCurrentPage\n      pageId\n      userId\n      __typename\n    }\n    lastBreakoutRoom {\n      isDefaultName\n      sequence\n      shortName\n      currentlyInRoom\n      __typename\n    }\n    reaction {\n      reactionEmoji\n      __typename\n    }\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Guest - WebSocket Write 52 PresentationPublishCursor" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;52&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;whiteboardId&quot;:&quot;92fb3dc968255c8c52d2181a8f3f7437f2e97ea3-1713820885538/1&quot;,&quot;xPercent&quot;:-3984.222737819025,&quot;yPercent&quot;:-608.5864994199535},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;PresentationPublishCursor&quot;,&quot;query&quot;:&quot;mutation PresentationPublishCursor($whiteboardId: String!, $xPercent: Float!, $yPercent: Float!) {\n  presentationPublishCursor(\n    whiteboardId: $whiteboardId\n    xPercent: $xPercent\n    yPercent: $yPercent\n  )\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="2.4 - Guest - Keep Connection (ping/chat)" enabled="true">
          <stringProp name="WhileController.condition">${__groovy(!vars.get(&apos;loop_counter&apos;).equals(&apos;0&apos;))}</stringProp>
        </WhileController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">if (vars.get(&quot;loop_counter&quot;) == null) {
  log.info(&quot;Resetting loop_counter to ${ping_loop_guest} (&quot; + ctx.getThreadGroup().getName() + &quot; &quot; + ctx.getThreadNum() + &quot;)&quot;);
  vars.put(&quot;loop_counter&quot;, &quot;${ping_loop_guest}&quot;);
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="2.4.1 - Guest - WebSocket Read anything" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="dataType">Text</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <stringProp name="readTimeout">10000</stringProp>
            <boolProp name="optional">true</boolProp>
          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${current_dir}/scripts/process_received.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script"></stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${__groovy(vars.get(&apos;is_ka&apos;).equals(&apos;true&apos;))}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="WebSocket Single Write Sampler" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;${write_next_id}&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ChatSetTyping&quot;,&quot;query&quot;:&quot;mutation ChatSetTyping($chatId: String!) {\n  chatSetTyping(chatId: $chatId)\n}&quot;}}
</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="WebSocket Single Write Sampler" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;${write_next_id}&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatMessageInMarkdownFormat&quot;:&quot;Oi&quot;,&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;ChatSendMessage&quot;,&quot;query&quot;:&quot;mutation ChatSendMessage($chatId: String!, $chatMessageInMarkdownFormat: String!) {\n  chatSendMessage(\n    chatId: $chatId\n    chatMessageInMarkdownFormat: $chatMessageInMarkdownFormat\n  )\n}&quot;}}
</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="WebSocket Single Write Sampler" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="payloadType">Text</stringProp>
              <stringProp name="requestData">{&quot;id&quot;:&quot;${write_next_id}&quot;,&quot;type&quot;:&quot;start&quot;,&quot;payload&quot;:{&quot;variables&quot;:{&quot;chatId&quot;:&quot;MAIN-PUBLIC-GROUP-CHAT&quot;,&quot;lastSeenAt&quot;:&quot;2024-04-24T18:26:28.382Z&quot;},&quot;extensions&quot;:{},&quot;operationName&quot;:&quot;UpdateChatUser&quot;,&quot;query&quot;:&quot;mutation UpdateChatUser($chatId: String, $lastSeenAt: timestamptz) {\n  update_chat_user(\n    where: {chatId: {_eq: $chatId}, _or: [{lastSeenAt: {_lt: $lastSeenAt}}, {lastSeenAt: {_is_null: true}}]}\n    _set: {lastSeenAt: $lastSeenAt}\n  ) {\n    affected_rows\n    __typename\n  }\n}&quot;}}</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename">${current_dir}/scripts/record_id.groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.5 - Guest - Leave Meeting" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <eu.luminis.jmeter.wssampler.TextFrameFilter guiclass="eu.luminis.jmeter.wssampler.TextFrameFilterGui" testclass="eu.luminis.jmeter.wssampler.TextFrameFilter" testname="ws Text Frame Filter" enabled="true">
            <stringProp name="comparisonType">IsPlain</stringProp>
            <stringProp name="TestPlan.comments">filters (i.e. discards) all ws text frames that are received by sampler in its scope</stringProp>
            <stringProp name="matchValue"></stringProp>
          </eu.luminis.jmeter.wssampler.TextFrameFilter>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="2.5.1 - Guest - WebSocket Close" enabled="true">
            <stringProp name="statusCode">1000</stringProp>
            <stringProp name="readTimeout">10000</stringProp>
          </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2092838583">1000: sampler requested close</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
